//////////////////////////////////////////////////////////////////////////
//	< Author >	< Anthony Poschen >
//	< Date >	< 26/5/2013 >
// < File >	< ResourceManager >
// < Brief >	< resource manager setup >
//////////////////////////////////////////////////////////////////////////
/*
//////////////////////////////////////////////////////////////////////////
///	< Includes >
#include "ResourceManager.h"

//////////////////////////////////////////////////////////////////////////
/// < Forward Declares >
ResourceManager* ResourceManager::m_pInst = nullptr;

//////////////////////////////////////////////////////////////////////////
ResourceManager* ResourceManager::Create()
{
	return (m_pInst == nullptr) ?  m_pInst = new ResourceManager() : m_pInst; 
}

//////////////////////////////////////////////////////////////////////////
ResourceManager* ResourceManager::Get()
{
	return m_pInst;
}

//////////////////////////////////////////////////////////////////////////
void ResourceManager::Release()
{
	delete m_pInst;
}

//////////////////////////////////////////////////////////////////////////
ResourceManager::ResourceManager()
	:m_kFilePath(".\\Data\\")
{
	// do this for every type of handler
	//m_kResourceHandlers.push_back(ResourceType("tmp",vector<string>())); 
}

//////////////////////////////////////////////////////////////////////////
ResourceManager::~ResourceManager()
{

}

*/